<% if (typeof messages !== 'undefined' && messages.error && messages.error.length > 0) { %>
    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
        <span class="block sm:inline"><%= messages.error %></span>
    </div>
<% } %>

<% if (typeof messages !== 'undefined' && messages.success && messages.success.length > 0) { %>
    <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
        <span class="block sm:inline"><%= messages.success %></span>
    </div>
<% } %>

<div id="profileError" class="hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4">
    <span class="block sm:inline"></span>
</div>

<div id="profileSuccess" class="hidden bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4">
    <span class="block sm:inline"></span>
</div>

<div class="container mx-auto px-4 py-8">
    <div class="max-w-4xl mx-auto">
        <div class="bg-white shadow rounded-lg p-8 mb-8">
            <div class="flex flex-col md:flex-row md:items-center md:space-x-8">
                <div class="relative group mb-6 md:mb-0">
                    <div class="w-32 h-32 rounded-full overflow-hidden ring-4 ring-gray-100">
                        <img id="avatarPreview" 
                             src="<%= typeof user.avatar !== 'undefined' ? user.avatar : '/images/default-avatar.jpg' %>" 
                             alt="Profile Picture" 
                             class="w-full h-full object-cover transition duration-300 group-hover:opacity-75">
                    </div>
                    <label for="avatar" 
                           class="absolute bottom-2 right-2 bg-blue-600 text-white rounded-full p-3 cursor-pointer hover:bg-blue-700 transition-colors shadow-lg">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"></path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        </svg>
                        <input type="file" id="avatar" name="avatar" accept="image/*" class="hidden">
                    </label>
                    <div class="absolute -bottom-6 left-0 right-0 text-center text-xs text-gray-500">
                        Click to change photo
                    </div>
                </div>
                <div class="flex-1">
                    <h2 id="displayUsername" class="text-3xl font-bold text-gray-900 mb-2"><%= user.username %></h2>
                    <p class="text-gray-600 mb-3">Member since <%= new Date(user.createdAt).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></p>
                    <p id="displayBio" class="text-gray-700 text-base leading-relaxed mb-4"><%= user.bio || 'No bio added yet' %></p>
                    
                    <!-- Social Links Display -->
                    <div class="flex flex-wrap gap-4">
                        <a id="displayWebsite" href="<%= user.social?.website || '#' %>" target="_blank" 
                           class="flex items-center px-4 py-2 rounded-full bg-gray-100 text-gray-700 hover:bg-gray-200 transition-colors <%= !user.social?.website ? 'opacity-50 pointer-events-none' : '' %>">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9"></path>
                            </svg>
                            <span class="text-sm font-medium"><%= user.social?.website || 'Website not added' %></span>
                        </a>
                        <a id="displayTwitter" href="https://twitter.com/<%= user.social?.twitter || '' %>" target="_blank" 
                           class="flex items-center px-4 py-2 rounded-full bg-gray-100 text-gray-700 hover:bg-blue-100 hover:text-blue-600 transition-colors <%= !user.social?.twitter ? 'opacity-50 pointer-events-none' : '' %>">
                            <i class="ph-twitter-logo text-lg mr-2"></i>
                            <span class="text-sm font-medium">@<%= user.social?.twitter || 'Twitter not added' %></span>
                        </a>
                        <a id="displayInstagram" href="https://instagram.com/<%= user.social?.instagram || '' %>" target="_blank" 
                           class="flex items-center px-4 py-2 rounded-full bg-gray-100 text-gray-700 hover:bg-pink-100 hover:text-pink-600 transition-colors <%= !user.social?.instagram ? 'opacity-50 pointer-events-none' : '' %>">
                            <i class="ph-instagram-logo text-lg mr-2"></i>
                            <span class="text-sm font-medium">@<%= user.social?.instagram || 'Instagram not added' %></span>
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Edit Profile Form -->
        <div class="bg-white shadow rounded-lg p-8">
            <h3 class="text-xl font-semibold text-gray-900 mb-6">Edit Profile</h3>
            <form id="profileForm" class="space-y-8">
                <div class="grid grid-cols-1 gap-8">
                    <!-- Username -->
                    <div class="col-span-1">
                        <label for="username" class="block text-sm font-medium text-gray-700 mb-2">Username</label>
                        <div class="relative rounded-md shadow-sm">
                            <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                                <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                </svg>
                            </div>
                            <input type="text" 
                                   id="username" 
                                   name="username" 
                                   value="<%= user.username %>" 
                                   required
                                   class="pl-11 h-12 block w-full rounded-lg border-gray-300 shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-base transition-colors"
                                   placeholder="Your username">
                            <div class="absolute inset-y-0 right-0 pr-4 flex items-center pointer-events-none">
                                <span class="text-gray-400 text-sm">Required</span>
                            </div>
                        </div>
                    </div>

                    <!-- Email -->
                    <div class="col-span-1">
                        <label for="email" class="block text-sm font-medium text-gray-700 mb-2">Email</label>
                        <div class="relative rounded-md shadow-sm">
                            <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                                <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                                </svg>
                            </div>
                            <input type="email" 
                                   id="email" 
                                   name="email" 
                                   value="<%= user.email %>" 
                                   required
                                   class="pl-11 h-12 block w-full rounded-lg border-gray-300 shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-base transition-colors"
                                   placeholder="your.email@example.com">
                            <div class="absolute inset-y-0 right-0 pr-4 flex items-center pointer-events-none">
                                <span class="text-gray-400 text-sm">Required</span>
                            </div>
                        </div>
                    </div>

                    <!-- Bio -->
                    <div class="col-span-1">
                        <label for="bio" class="block text-sm font-medium text-gray-700 mb-2">
                            Bio
                            <span class="text-gray-500 text-xs ml-1">(Optional)</span>
                        </label>
                        <div class="relative">
                            <textarea id="bio" 
                                      name="bio" 
                                      rows="4"
                                      class="block w-full rounded-lg border-gray-300 shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-base transition-colors"
                                      placeholder="Tell us about yourself..."><%= typeof user.bio !== 'undefined' ? user.bio : '' %></textarea>
                            <div class="absolute bottom-3 right-3">
                                <span class="text-gray-400 text-sm" id="bioCounter">0/500</span>
                            </div>
                        </div>
                    </div>

                    <!-- Social Links -->
                    <div class="col-span-1 space-y-6">
                        <label class="block text-sm font-medium text-gray-700 mb-4">Social Links</label>
                        
                        <!-- Website -->
                        <div class="relative rounded-md shadow-sm">
                            <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                                <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9"></path>
                                </svg>
                            </div>
                            <input type="url" 
                                   id="website" 
                                   name="website" 
                                   value="<%= user.social?.website || '' %>"
                                   class="pl-11 h-12 block w-full rounded-lg border-gray-300 shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-base transition-colors"
                                   placeholder="https://yourwebsite.com">
                        </div>

                        <!-- Twitter -->
                        <div class="relative rounded-md shadow-sm">
                            <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none text-gray-400">
                                <i class="ph-twitter-logo text-xl"></i>
                            </div>
                            <input type="text" 
                                   id="twitter" 
                                   name="twitter" 
                                   value="<%= user.social?.twitter || '' %>"
                                   class="pl-11 h-12 block w-full rounded-lg border-gray-300 shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-base transition-colors"
                                   placeholder="@username">
                        </div>

                        <!-- Instagram -->
                        <div class="relative rounded-md shadow-sm">
                            <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none text-gray-400">
                                <i class="ph-instagram-logo text-xl"></i>
                            </div>
                            <input type="text" 
                                   id="instagram" 
                                   name="instagram" 
                                   value="<%= user.social?.instagram || '' %>"
                                   class="pl-11 h-12 block w-full rounded-lg border-gray-300 shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-base transition-colors"
                                   placeholder="username">
                        </div>
                    </div>
                </div>

                <div class="flex justify-end pt-6">
                    <button type="submit" 
                            class="inline-flex items-center px-6 py-3 border border-transparent rounded-lg shadow-sm text-base font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                        </svg>
                        Save Changes
                    </button>
                </div>
            </form>

            <!-- Change Password Form -->
            <div class="mt-8 pt-8 border-t border-gray-200">
                <h3 class="text-lg font-medium text-gray-900">Change Password</h3>
                <form id="passwordForm" class="mt-4 space-y-4">
                    <div>
                        <label for="currentPassword" class="block text-sm font-medium text-gray-700">Current Password</label>
                        <input type="password" id="currentPassword" name="currentPassword" required
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                    </div>

                    <div>
                        <label for="newPassword" class="block text-sm font-medium text-gray-700">New Password</label>
                        <input type="password" id="newPassword" name="newPassword" required
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                    </div>

                    <div>
                        <label for="confirmPassword" class="block text-sm font-medium text-gray-700">Confirm New Password</label>
                        <input type="password" id="confirmPassword" name="confirmPassword" required
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                    </div>

                    <div class="flex justify-end">
                        <button type="submit"
                            class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                            Update Password
                        </button>
                    </div>
                </form>
            </div>

            <!-- Delete Account -->
            <div class="mt-8 pt-8 border-t border-gray-200">
                <h3 class="text-lg font-medium text-red-600">Delete Account</h3>
                <p class="mt-1 text-sm text-gray-600">Once you delete your account, there is no going back. Please be certain.</p>
                <div class="mt-4">
                    <button onclick="confirmDelete()"
                        class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                        Delete Account
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
function showError(message) {
    const errorDiv = document.getElementById('profileError');
    errorDiv.querySelector('span').textContent = message;
    errorDiv.classList.remove('hidden');
    setTimeout(() => {
        errorDiv.classList.add('hidden');
    }, 5000);
}

function showSuccess(message) {
    const successDiv = document.getElementById('profileSuccess');
    successDiv.querySelector('span').textContent = message;
    successDiv.classList.remove('hidden');
    setTimeout(() => {
        successDiv.classList.add('hidden');
    }, 5000);
}

// Bio character counter
const bioTextarea = document.getElementById('bio');
const bioCounter = document.getElementById('bioCounter');

function updateBioCounter() {
    const count = bioTextarea.value.length;
    bioCounter.textContent = `${count}/500`;
    if (count > 450) {
        bioCounter.classList.add('text-yellow-600');
    } else {
        bioCounter.classList.remove('text-yellow-600');
    }
    if (count > 500) {
        bioCounter.classList.add('text-red-600');
    } else {
        bioCounter.classList.remove('text-red-600');
    }
}

bioTextarea.addEventListener('input', updateBioCounter);
updateBioCounter(); // Initial count

// Update profile display
function updateProfileDisplay(data) {
    document.getElementById('displayUsername').textContent = data.username;
    document.getElementById('displayBio').textContent = data.bio || 'No bio added yet';
    
    // Update social links
    const website = document.getElementById('displayWebsite');
    const twitter = document.getElementById('displayTwitter');
    const instagram = document.getElementById('displayInstagram');
    
    if (data.social?.website) {
        website.href = data.social.website;
        website.querySelector('span').textContent = data.social.website;
        website.classList.remove('opacity-50', 'pointer-events-none');
    } else {
        website.href = '#';
        website.querySelector('span').textContent = 'Website not added';
        website.classList.add('opacity-50', 'pointer-events-none');
    }
    
    if (data.social?.twitter) {
        twitter.href = `https://twitter.com/${data.social.twitter}`;
        twitter.querySelector('span').textContent = `@${data.social.twitter}`;
        twitter.classList.remove('opacity-50', 'pointer-events-none');
    } else {
        twitter.href = '#';
        twitter.querySelector('span').textContent = 'Twitter not added';
        twitter.classList.add('opacity-50', 'pointer-events-none');
    }
    
    if (data.social?.instagram) {
        instagram.href = `https://instagram.com/${data.social.instagram}`;
        instagram.querySelector('span').textContent = `@${data.social.instagram}`;
        instagram.classList.remove('opacity-50', 'pointer-events-none');
    } else {
        instagram.href = '#';
        instagram.querySelector('span').textContent = 'Instagram not added';
        instagram.classList.add('opacity-50', 'pointer-events-none');
    }
}

// Handle profile form submission
document.getElementById('profileForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData();
    formData.append('username', document.getElementById('username').value);
    formData.append('email', document.getElementById('email').value);
    formData.append('bio', document.getElementById('bio').value);
    formData.append('website', document.getElementById('website').value);
    formData.append('twitter', document.getElementById('twitter').value);
    formData.append('instagram', document.getElementById('instagram').value);

    const avatarInput = document.getElementById('avatar');
    if (avatarInput.files.length > 0) {
        formData.append('avatar', avatarInput.files[0]);
    }

    try {
        const response = await fetch('/profile/update', {
            method: 'POST',
            body: formData
        });

        const data = await response.json();
        if (data.success) {
            showSuccess(data.message);
            // Update profile display
            updateProfileDisplay(data.user);
            // Update avatar preview if a new one was uploaded
            if (data.user.avatar) {
                document.getElementById('avatarPreview').src = data.user.avatar;
            }
        } else {
            showError(data.error || 'Error updating profile');
        }
    } catch (error) {
        console.error('Error:', error);
        showError('Error updating profile');
    }
});

// Handle password form submission
document.getElementById('passwordForm').addEventListener('submit', async function(e) {
    e.preventDefault();

    const currentPassword = document.getElementById('currentPassword').value;
    const newPassword = document.getElementById('newPassword').value;
    const confirmPassword = document.getElementById('confirmPassword').value;

    if (newPassword !== confirmPassword) {
        alert('New passwords do not match');
        return;
    }

    try {
        const response = await fetch('/profile/change-password', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                currentPassword,
                newPassword,
                confirmPassword
            })
        });

        const data = await response.json();
        if (data.success) {
            alert('Password updated successfully');
            document.getElementById('passwordForm').reset();
        } else {
            alert(data.error || 'Error updating password');
        }
    } catch (error) {
        console.error('Error:', error);
        alert('Error updating password');
    }
});

// Handle avatar preview with loading state
document.getElementById('avatar').addEventListener('change', function(e) {
    const file = e.target.files[0];
    if (file) {
        const reader = new FileReader();
        const preview = document.getElementById('avatarPreview');
        
        // Add loading state
        preview.style.opacity = '0.5';
        
        reader.onload = function(e) {
            preview.src = e.target.result;
            // Remove loading state
            preview.style.opacity = '1';
        };
        
        reader.onerror = function() {
            showError('Error loading image preview');
            preview.style.opacity = '1';
        };
        
        reader.readAsDataURL(file);
    }
});

// Handle account deletion
function confirmDelete() {
    if (confirm('Are you sure you want to delete your account? This action cannot be undone.')) {
        fetch('/profile/delete', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('Account deleted successfully');
                window.location.href = '/';
            } else {
                alert(data.error || 'Error deleting account');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error deleting account');
        });
    }
}

// Real-time profile updates
function setupRealTimeUpdates() {
    const inputs = {
        username: document.getElementById('username'),
        bio: document.getElementById('bio'),
        website: document.getElementById('website'),
        twitter: document.getElementById('twitter'),
        instagram: document.getElementById('instagram')
    };

    // Update profile display in real-time as user types
    Object.entries(inputs).forEach(([key, input]) => {
        input.addEventListener('input', function(e) {
            const value = e.target.value.trim();
            
            switch(key) {
                case 'username':
                    document.getElementById('displayUsername').textContent = value || 'Username';
                    break;
                case 'bio':
                    document.getElementById('displayBio').textContent = value || 'No bio added yet';
                    updateBioCounter();
                    break;
                case 'website':
                    const website = document.getElementById('displayWebsite');
                    if (value) {
                        website.href = value;
                        website.querySelector('span').textContent = value;
                        website.classList.remove('opacity-50', 'pointer-events-none');
                    } else {
                        website.href = '#';
                        website.querySelector('span').textContent = 'Website not added';
                        website.classList.add('opacity-50', 'pointer-events-none');
                    }
                    break;
                case 'twitter':
                    const twitter = document.getElementById('displayTwitter');
                    if (value) {
                        twitter.href = `https://twitter.com/${value.replace('@', '')}`;
                        twitter.querySelector('span').textContent = value.startsWith('@') ? value : `@${value}`;
                        twitter.classList.remove('opacity-50', 'pointer-events-none');
                    } else {
                        twitter.href = '#';
                        twitter.querySelector('span').textContent = 'Twitter not added';
                        twitter.classList.add('opacity-50', 'pointer-events-none');
                    }
                    break;
                case 'instagram':
                    const instagram = document.getElementById('displayInstagram');
                    if (value) {
                        instagram.href = `https://instagram.com/${value.replace('@', '')}`;
                        instagram.querySelector('span').textContent = value.startsWith('@') ? value : `@${value}`;
                        instagram.classList.remove('opacity-50', 'pointer-events-none');
                    } else {
                        instagram.href = '#';
                        instagram.querySelector('span').textContent = 'Instagram not added';
                        instagram.classList.add('opacity-50', 'pointer-events-none');
                    }
                    break;
            }
        });
    });
}

// Initialize real-time updates
setupRealTimeUpdates();
</script> 